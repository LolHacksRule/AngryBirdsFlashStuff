package §>! §
{
   import §,!7§.TextureManager;
   import §6!J§.Texture;
   import §7!>§.Starling;
   import §]!@§.§`!N§;
   import flash.display.BitmapData;
   
   public class ParticleManager
   {
      
      private static var §<w§:Object;
      
      private static var §7w§:Vector.<Texture>;
      
      {
         method
            name null
            returns null
            
            body
               maxstack 5
               localcount 3
               initscopedepth 3
               maxscopedepth 4
               
               code
                  pushfalse
                  pushtrue
                  swap
                  jump ofs0010
                  coerce_a
                  dxnslate
                  pushtrue
                  getglobalscope
                  urshift
                  nextvalue
                  hasnext
                  newactivation
                  increment_i
         ofs0010:
                  setlocal1
                  setlocal2
                  getlocal0
                  pushscope
                  jump ofs0021
                  pop
                  lessthan
                  swap
                  lessthan
                  subtract
                  convert_d
                  getlocal3
                  pop
                  greaterequals
         ofs0021:
                  getlocal1
                  iftrue ofs004f
                  jump ofs0053
         ofs002a:
                  label
                  returnvoid
                  pushtrue
                  iftrue ofs0031
         ofs0031:
                  label
                  findproperty QName(PrivateNamespace("@!H"),"7w")
                  findpropstrict Multiname("Vector",[PrivateNamespace("@!H"),PrivateNamespace("ParticleManager.as$24"),PackageNamespace(""),PackageNamespace(">! "),PackageInternalNs(">! "),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("@!H"),StaticProtectedNs("@!H"),PackageNamespace("__AS3__.vec")])
                  getproperty Multiname("Vector",[PrivateNamespace("@!H"),PrivateNamespace("ParticleManager.as$24"),PackageNamespace(""),PackageNamespace(">! "),PackageInternalNs(">! "),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("@!H"),StaticProtectedNs("@!H"),PackageNamespace("__AS3__.vec")])
                  findpropstrict QName(PackageNamespace("6!J"),"Texture")
                  getproperty QName(PackageNamespace("6!J"),"Texture")
                  applytype 1
                  construct 0
                  setproperty QName(PrivateNamespace("@!H"),"7w")
                  getlocal2
                  dup
                  iftrue ofs004b
                  pop
                  getlocal1
                  convert_b
         ofs004b:
                  iffalse ofs0059
         ofs004f:
                  jump ofs002a
         ofs0053:
                  findproperty QName(PrivateNamespace("@!H"),"<w")
                  newobject 0
                  setproperty QName(PrivateNamespace("@!H"),"<w")
         ofs0059:
                  jump ofs0031
                  returnvoid
               end ; code
            end ; body
         end ; method
      }
      
      public function ParticleManager()
      {
         method
            name null
            returns null
            
            body
               maxstack 3
               localcount 3
               initscopedepth 4
               maxscopedepth 5
               
               code
                  pushfalse
                  pushtrue
                  setlocal1
                  jump ofs0010
                  urshift
                  setlocal3
                  increment
                  getlocal3
                  greaterthan
                  lshift
                  lessequals
                  pushfalse
                  istypelate
         ofs0010:
                  setlocal2
                  getlocal0
                  pushscope
                  getlocal2
                  dup
                  iffalse ofs001c
                  pop
                  getlocal2
                  convert_b
         ofs001c:
                  iftrue ofs0023
                  getlocal0
                  constructsuper 0
         ofs0023:
                  returnvoid
                  returnvoid
               end ; code
            end ; body
         end ; method
      }
      
      public static function §<!b§(param1:String, param2:XML, param3:BitmapData) : void
      {
         trait method QName(PackageNamespace(""),"<!b")
            flag FINAL
            dispid 3
            method
               name null
               param QName(PackageNamespace(""),"String")
               param QName(PackageNamespace(""),"XML")
               param QName(PackageNamespace("flash.display"),"BitmapData")
               returns QName(PackageNamespace(""),"void")
               
               body
                  maxstack 7
                  localcount 6
                  initscopedepth 3
                  maxscopedepth 4
                  
                  code
                     pushfalse
                     pushtrue
                     swap
                     jump ofs0012
                     getlocal 4
                     getlocal2
                     pushwith
                     checkfilter
                     coerce_s
                     nextvalue
                     typeof
                     setlocal3
                     inclocal_i 4
            ofs0012:
                     setlocal 4
                     setlocal 5
                     getlocal0
                     pushscope
                     getlocal 4
                     iftrue ofs002c
                     findpropstrict QName(PrivateNamespace("@!H"),"<w")
                     getproperty QName(PrivateNamespace("@!H"),"<w")
                     getlocal1
                     findpropstrict QName(PrivateNamespace("ParticleManager.as$24"),"ParticleResource")
                     getlocal2
                     getlocal3
                     constructprop QName(PrivateNamespace("ParticleManager.as$24"),"ParticleResource"), 2
                     setproperty MultinameL([PrivateNamespace("@!H"),PrivateNamespace("ParticleManager.as$24"),PackageNamespace(""),PackageNamespace(">! "),PackageInternalNs(">! "),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("@!H"),StaticProtectedNs("@!H")])
            ofs002c:
                     returnvoid
                     returnvoid
                  end ; code
               end ; body
            end ; method
         }
         
         public static function §@a§(param1:String, param2:TextureManager) : §`!N§
         {
            trait method QName(PackageNamespace(""),"@a")
               flag FINAL
               dispid 4
               method
                  name null
                  param QName(PackageNamespace(""),"String")
                  param QName(PackageNamespace(",!7"),"TextureManager")
                  returns QName(PackageNamespace("]!@"),"`!N")
                  
                  body
                     maxstack 5
                     localcount 8
                     initscopedepth 3
                     maxscopedepth 4
                     
                     code
                        pushfalse
                        pushtrue
                        swap
                        jump ofs0017
                        declocal 3
                        inclocal_i 6
                        greaterthan
                        inclocal 4
                        kill 6
                        declocal 5
                        inclocal_i 2
                        getlocal3
                        kill 4
               ofs0017:
                        setlocal 6
                        setlocal 7
                        getlocal0
                        pushscope
                        findpropstrict QName(PrivateNamespace("@!H"),"8]")
                        getlocal1
                        callproperty QName(PrivateNamespace("@!H"),"8]"), 1
                        coerce QName(PrivateNamespace("ParticleManager.as$24"),"ParticleResource")
                        setlocal3
                        getlocal 6
                        iftrue ofs0040
                        getlocal3
                        not
                        getlocal 7
                        iffalse ofs0048
                        iffalse ofs0040
                        getlocal 7
                        iffalse ofs0040
                        pushnull
                        returnvalue
               ofs0040:
                        pushtrue
                        getlocal 6
                        iftrue ofs0048
                        convert_b
               ofs0048:
                        setlocal 4
                        getlocal 6
                        iftrue ofs0093
                        getlocal3
                        getproperty QName(PackageNamespace(""),"config")
                        getproperty Multiname("disableMipMapping",[PrivateNamespace("@!H"),PrivateNamespace("ParticleManager.as$24"),PackageNamespace(""),PackageNamespace(">! "),PackageInternalNs(">! "),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("@!H"),StaticProtectedNs("@!H")])
                        callproperty Multiname("length",[PrivateNamespace("@!H"),PrivateNamespace("ParticleManager.as$24"),PackageNamespace(""),PackageNamespace(">! "),PackageInternalNs(">! "),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("@!H"),StaticProtectedNs("@!H")]), 0
                        jump ofs0069
                        astypelate
                        declocal_i 5
                        convert_d
                        inclocal_i 4
                        getlocal0
                        getlocal3
                        kill 6
                        pushfalse
                        inclocal 3
               ofs0069:
                        pushbyte 1
                        ifne ofs0093
                        getlocal 7
                        iffalse ofs0093
                        findpropstrict QName(PackageNamespace(""),"parseFloat")
                        getlocal3
                        getproperty QName(PackageNamespace(""),"config")
                        getproperty Multiname("disableMipMapping",[PrivateNamespace("@!H"),PrivateNamespace("ParticleManager.as$24"),PackageNamespace(""),PackageNamespace(">! "),PackageInternalNs(">! "),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("@!H"),StaticProtectedNs("@!H")])
                        callproperty QName(PackageNamespace(""),"parseFloat"), 1
                        pushdouble 0.0
                        equals
                        getlocal 7
                        dup
                        iftrue ofs008c
                        pop
                        getlocal3
                        convert_b
               ofs008c:
                        iffalse ofs0091
                        convert_b
               ofs0091:
                        setlocal 4
               ofs0093:
                        getlocal2
                        getlocal3
                        getproperty QName(PackageNamespace(""),"bitmapData")
                        getlocal 4
                        jump ofs00ab
                        declocal 3
                        getlocal 6
                        inclocal 4
                        checkfilter
                        setlocal3
                        declocal 3
                        getlocal 6
                        setlocal2
                        pushfalse
               ofs00ab:
                        callproperty QName(PackageNamespace(""),"getTextureFromBitmapData"), 2
                        coerce QName(PackageNamespace("6!J"),"Texture")
                        setlocal 5
                        getlocal 6
                        iftrue ofs00d5
                        findpropstrict QName(PrivateNamespace("@!H"),"7w")
                        getproperty QName(PrivateNamespace("@!H"),"7w")
                        getlocal 5
                        callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf"), 1
                        pushbyte 0
                        ifnlt ofs00df
                        getlocal 6
                        dup
                        iffalse ofs00d1
                        pop
                        getlocal0
                        convert_b
               ofs00d1:
                        iftrue ofs00df
               ofs00d5:
                        findpropstrict QName(PrivateNamespace("@!H"),"7w")
                        getproperty QName(PrivateNamespace("@!H"),"7w")
                        getlocal 5
                        callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
                        pop
               ofs00df:
                        findpropstrict QName(PackageNamespace("]!@"),"`!N")
                        getlocal3
                        getproperty QName(PackageNamespace(""),"config")
                        getlocal 5
                        constructprop QName(PackageNamespace("]!@"),"`!N"), 2
                        returnvalue
                        returnvoid
                     end ; code
                  end ; body
               end ; method
            }
            
            private static function §8]§(param1:String) : ParticleResource
            {
               trait method QName(PrivateNamespace("@!H"),"8]")
                  flag FINAL
                  dispid 5
                  method
                     name null
                     param QName(PackageNamespace(""),"String")
                     returns QName(PrivateNamespace("ParticleManager.as$24"),"ParticleResource")
                     
                     body
                        maxstack 4
                        localcount 6
                        initscopedepth 3
                        maxscopedepth 4
                        
                        code
                           pushfalse
                           pushtrue
                           setlocal 4
                           jump ofs0014
                           convert_b
                           subtract
                           dup
                           declocal 3
                           astypelate
                           setlocal3
                           declocal 4
                           getlocal3
                           inclocal 4
                  ofs0014:
                           setlocal 5
                           getlocal0
                           pushscope
                           pushnull
                           coerce QName(PrivateNamespace("ParticleManager.as$24"),"ParticleResource")
                           setlocal3
                           getlocal1
                           getlocal 5
                           iftrue ofs0024
                           coerce_s
                  ofs0024:
                           setlocal2
                           getlocal 4
                           iffalse ofs00be
                           findpropstrict QName(PackageNamespace("7!>"),"Starling")
                           getproperty QName(PackageNamespace("7!>"),"Starling")
                           getproperty QName(PackageNamespace(""),"isSoftware")
                           getlocal 5
                           dup
                           iffalse ofs003b
                           pop
                           getlocal1
                           convert_b
                  ofs003b:
                           iftrue ofs0040
                           not
                  ofs0040:
                           iffalse ofs00a1
                           getlocal 4
                           dup
                           iftrue ofs004e
                           pop
                           getlocal0
                           convert_b
                  ofs004e:
                           iffalse ofs00be
                           getlocal2
                           getlocal 4
                           dup
                           iftrue ofs006c
                           jump ofs0069
                           getlocal1
                           setlocal 4
                           getlocal2
                           rshift
                           declocal_i 2
                           strictequals
                           getlocal3
                           pushtrue
                           setlocal3
                  ofs0069:
                           pop
                           getlocal3
                           convert_b
                  ofs006c:
                           iffalse ofs00b9
                           pushstring "_gpu"
                           getlocal 5
                           iftrue ofs00bb
                           add
                           getlocal 5
                           dup
                           iffalse ofs0083
                           pop
                           getlocal1
                           convert_b
                  ofs0083:
                           iftrue ofs00bc
                           coerce_s
                           getlocal 5
                           dup
                           iffalse ofs0092
                           pop
                           getlocal2
                           convert_b
                  ofs0092:
                           iftrue ofs00b9
                           setlocal2
                           getlocal 5
                           iftrue ofs00be
                           jump ofs00be
                  ofs00a1:
                           getlocal2
                           getlocal 5
                           iftrue ofs00bd
                           jump ofs00b9
                           coerce_a
                           convert_s
                           strictequals
                           inclocal 4
                           declocal_i 3
                           setlocal 4
                           inclocal 3
                           convert_s
                           bitxor
                  ofs00b9:
                           pushstring "_cpu"
                  ofs00bb:
                           add
                  ofs00bc:
                           coerce_s
                  ofs00bd:
                           setlocal2
                  ofs00be:
                           findpropstrict QName(PrivateNamespace("@!H"),"<w")
                           getproperty QName(PrivateNamespace("@!H"),"<w")
                           getlocal2
                           getproperty MultinameL([PrivateNamespace("@!H"),PrivateNamespace("ParticleManager.as$24"),PackageNamespace(""),PackageNamespace(">! "),PackageInternalNs(">! "),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("@!H"),StaticProtectedNs("@!H")])
                           findpropstrict QName(PrivateNamespace("ParticleManager.as$24"),"ParticleResource")
                           getproperty QName(PrivateNamespace("ParticleManager.as$24"),"ParticleResource")
                           astypelate
                           coerce QName(PrivateNamespace("ParticleManager.as$24"),"ParticleResource")
                           setlocal3
                           getlocal 4
                           iffalse ofs00d9
                           getlocal3
                           not
                           iffalse ofs00e8
                  ofs00d9:
                           findpropstrict QName(PrivateNamespace("@!H"),"<w")
                           getproperty QName(PrivateNamespace("@!H"),"<w")
                           getlocal1
                           getproperty MultinameL([PrivateNamespace("@!H"),PrivateNamespace("ParticleManager.as$24"),PackageNamespace(""),PackageNamespace(">! "),PackageInternalNs(">! "),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("@!H"),StaticProtectedNs("@!H")])
                           findpropstrict QName(PrivateNamespace("ParticleManager.as$24"),"ParticleResource")
                           getproperty QName(PrivateNamespace("ParticleManager.as$24"),"ParticleResource")
                           astypelate
                           coerce QName(PrivateNamespace("ParticleManager.as$24"),"ParticleResource")
                           setlocal3
                  ofs00e8:
                           getlocal3
                           returnvalue
                           returnvoid
                        end ; code
                     end ; body
                  end ; method
               }
            }
         }
         
         import flash.display.BitmapData;
         
         class ParticleResource
         {
            
            {
               method
                  name null
                  returns null
                  
                  body
                     maxstack 1
                     localcount 1
                     initscopedepth 3
                     maxscopedepth 4
                     
                     code
                        getlocal0
                        pushscope
                        returnvoid
                     end ; code
                  end ; body
               end ; method
            }
            
            public var config:XML;
            
            public var bitmapData:BitmapData;
            
            function ParticleResource(param1:XML, param2:BitmapData)
            {
               method
                  name null
                  param QName(PackageNamespace(""),"XML")
                  param QName(PackageNamespace("flash.display"),"BitmapData")
                  returns null
                  
                  body
                     maxstack 2
                     localcount 3
                     initscopedepth 4
                     maxscopedepth 5
                     
                     code
                        getlocal0
                        pushscope
                        getlocal0
                        constructsuper 0
                        getlocal0
                        getlocal1
                        initproperty QName(PackageNamespace(""),"config")
                        getlocal0
                        getlocal2
                        initproperty QName(PackageNamespace(""),"bitmapData")
                        returnvoid
                     end ; code
                  end ; body
               end ; method
            }
         }
