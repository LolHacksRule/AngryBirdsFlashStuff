package §%r§
{
   import §!!0§.SoundEngine;
   import §#!,§.Sprite;
   import §,!7§.TextureManager;
   
   public class §[!H§ extends §,!b§
   {
      
      {
         method
            name null
            returns null
            
            body
               maxstack 3
               localcount 1
               initscopedepth 4
               maxscopedepth 5
               
               code
                  getlocal0
                  pushscope
                  returnvoid
                  returnvoid
               end ; code
            end ; body
         end ; method
      }
      
      private var §8!5§:String;
      
      private var §'a§:Boolean;
      
      private var §@`§:Number;
      
      private var §&_§:int;
      
      public function §[!H§(param1:Number, param2:Number, param3:String, param4:Boolean, param5:Number, param6:int)
      {
         method
            name null
            param QName(PackageNamespace(""),"Number")
            param QName(PackageNamespace(""),"Number")
            param QName(PackageNamespace(""),"String")
            param QName(PackageNamespace(""),"Boolean")
            param QName(PackageNamespace(""),"Number")
            param QName(PackageNamespace(""),"int")
            returns null
            
            body
               maxstack 5
               localcount 9
               initscopedepth 5
               maxscopedepth 6
               
               code
                  pushfalse
                  pushtrue
                  setlocal 7
                  jump ofs0014
                  istypelate
                  getlocal 4
                  inclocal 6
                  newactivation
                  pop
                  bitand
                  nextvalue
                  getlocal1
                  declocal 5
         ofs0014:
                  setlocal 8
                  getlocal0
                  pushscope
                  getlocal 7
                  dup
                  iftrue ofs0022
                  pop
                  getlocal1
                  convert_b
         ofs0022:
                  iffalse ofs0079
                  jump ofs00a0
         ofs002a:
                  label
                  returnvoid
                  pushtrue
                  iftrue ofs0031
         ofs0031:
                  label
                  getlocal0
                  jump ofs0044
                  declocal 3
                  declocal_i 2
                  swap
                  getlocal2
                  kill 6
                  checkfilter
                  convert_b
                  setlocal 6
                  bitnot
         ofs0044:
                  getlocal 6
                  initproperty QName(PrivateNamespace("0!C"),"&_")
                  getlocal 7
                  dup
                  iftrue ofs0052
                  pop
                  getlocal2
                  convert_b
         ofs0052:
                  iffalse ofs0083
                  jump ofs0065
                  lshift
                  checkfilter
                  negate
                  coerce_a
                  modulo
                  kill 4
                  setlocal 4
                  bitor
                  setlocal3
         ofs0065:
                  getlocal 8
                  dup
                  iffalse ofs006f
                  pop
                  getlocal3
                  convert_b
         ofs006f:
                  iftrue ofs008d
                  getlocal 8
                  iftrue ofs00a5
         ofs0079:
                  jump ofs002a
         ofs007d:
                  label
                  getlocal0
                  getlocal 5
                  initproperty QName(PrivateNamespace("0!C"),"@`")
         ofs0083:
                  jump ofs0031
         ofs0087:
                  label
                  getlocal0
                  getlocal 4
                  initproperty QName(PrivateNamespace("0!C"),"\'a")
         ofs008d:
                  getlocal 8
                  iftrue ofs009c
                  jump ofs007d
         ofs0097:
                  label
                  getlocal0
                  getlocal3
                  initproperty QName(PrivateNamespace("0!C"),"8!5")
         ofs009c:
                  jump ofs0087
         ofs00a0:
                  getlocal0
                  getlocal1
                  getlocal2
                  constructsuper 2
         ofs00a5:
                  jump ofs0097
                  returnvoid
               end ; code
            end ; body
         end ; method
      }
      
      override public function update(param1:Number, param2:Sprite, param3:TextureManager) : Boolean
      {
         trait method QName(PackageNamespace(""),"update")
            flag OVERRIDE
            dispid 0
            method
               name null
               param QName(PackageNamespace(""),"Number")
               param QName(PackageNamespace("#!,"),"Sprite")
               param QName(PackageNamespace(",!7"),"TextureManager")
               returns QName(PackageNamespace(""),"Boolean")
               
               body
                  maxstack 6
                  localcount 6
                  initscopedepth 5
                  maxscopedepth 6
                  
                  code
                     pushfalse
                     pushtrue
                     setlocal 4
                     jump ofs0018
                     inclocal 3
                     declocal 2
                     kill 2
                     declocal_i 3
                     inclocal 3
                     urshift
                     kill 3
                     declocal 2
                     add_i
            ofs0018:
                     setlocal 5
                     getlocal0
                     pushscope
                     getlocal 4
                     dup
                     iftrue ofs0026
                     pop
                     getlocal3
                     convert_b
            ofs0026:
                     iffalse ofs00aa
                     jump ofs009e
            ofs002e:
                     label
                     pushfalse
                     getlocal 4
                     dup
                     iftrue ofs003a
                     pop
                     getlocal3
                     convert_b
            ofs003a:
                     iffalse ofs006b
                     getlocal 5
                     jump ofs0051
                     kill 4
                     getlocal 4
                     bitnot
                     kill 2
                     setlocal3
                     modulo
                     convert_u
                     inclocal 3
                     strictequals
            ofs0051:
                     iftrue ofs00a6
                     getlocal 4
                     dup
                     iftrue ofs005f
                     pop
                     getlocal0
                     convert_b
            ofs005f:
                     iffalse ofs00a5
                     returnvalue
                     pushtrue
                     iftrue ofs0069
            ofs0069:
                     label
                     pushfalse
            ofs006b:
                     returnvalue
                     jump ofs0070
            ofs0070:
                     declocal_i 3
                     declocal 2
                     kill 3
                     increment
                     subtract_i
                     declocal_i 4
                     declocal 3
                     subtract
                     multiply_i
                     getlocal 5
                     dup
                     iffalse ofs0085
            ofs0085:
                     pop
                     getlocal3
                     convert_b
                     iftrue ofs008c
            ofs008c:
                     getlocal 5
                     dup
                     iffalse ofs0093
            ofs0093:
                     pop
                     getlocal1
                     convert_b
                     iftrue ofs009a
            ofs009a:
                     jump ofs009e
            ofs009e:
                     getlocal0
                     getlocal1
                     getlocal2
                     getlocal3
                     callsuper QName(PackageNamespace(""),"update"), 3
            ofs00a5:
                     not
            ofs00a6:
                     iffalse ofs002e
            ofs00aa:
                     findpropstrict QName(PackageNamespace("!!0"),"SoundEngine")
                     getproperty QName(PackageNamespace("!!0"),"SoundEngine")
                     getlocal0
                     getproperty QName(PrivateNamespace("0!C"),"8!5")
                     callproperty QName(PackageNamespace(""),"-!h"), 1
                     pop
                     jump ofs0069
                     returnvoid
                  end ; code
               end ; body
            end ; method
         }
         
         override public function clone() : §,!b§
         {
            trait method QName(PackageNamespace(""),"clone")
               flag OVERRIDE
               dispid 0
               method
                  name null
                  returns QName(PackageNamespace("%r"),",!b")
                  
                  body
                     maxstack 9
                     localcount 2
                     initscopedepth 5
                     maxscopedepth 6
                     
                     code
                        getlocal0
                        pushscope
                        findpropstrict QName(PackageNamespace("%r"),"[!H")
                        jump ofs0011
                        add
                        convert_s
                        equals
                        convert_i
                        negate_i
                        setlocal3
                        not
                        convert_s
                        getlocal0
               ofs0011:
                        findpropstrict QName(PackageNamespace(""),"time")
                        getproperty QName(PackageNamespace(""),"time")
                        findpropstrict QName(PackageNamespace(""),"duration")
                        getproperty QName(PackageNamespace(""),"duration")
                        getlocal0
                        getproperty QName(PrivateNamespace("0!C"),"8!5")
                        getlocal0
                        getproperty QName(PrivateNamespace("0!C"),"\'a")
                        getlocal0
                        getproperty QName(PrivateNamespace("0!C"),"@`")
                        getlocal0
                        getproperty QName(PrivateNamespace("0!C"),"&_")
                        constructprop QName(PackageNamespace("%r"),"[!H"), 6
                        coerce QName(PackageNamespace("%r"),"[!H")
                        setlocal1
                        getlocal1
                        returnvalue
                        returnvoid
                     end ; code
                  end ; body
               end ; method
            }
         }
      }
