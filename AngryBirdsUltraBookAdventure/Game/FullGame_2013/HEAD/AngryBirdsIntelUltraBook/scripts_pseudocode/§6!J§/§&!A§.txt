package §6!J§
{
   import §+8§.§0K§;
   
   public class §&!A§
   {
      
      public static const NONE:String = "none";
      
      public static const §^Z§:String = "bilinear";
      
      public static const §?k§:String = "trilinear";
      
      {
         method
            name null
            returns null
            
            body
               maxstack 4
               localcount 3
               initscopedepth 3
               maxscopedepth 4
               
               code
                  pushfalse
                  pushtrue
                  setlocal1
                  jump ofs0010
                  greaterthan
                  multiply_i
                  convert_s
                  pushwith
                  nextvalue
                  greaterequals
                  dxnslate
                  subtract_i
                  bitor
         ofs0010:
                  setlocal2
                  getlocal0
                  pushscope
                  getlocal1
                  dup
                  iftrue ofs0029
                  jump ofs0026
                  strictequals
                  not
                  dxnslate
                  coerce_s
                  setlocal3
                  convert_d
                  nextvalue
                  increment
                  hasnext
         ofs0026:
                  pop
                  getlocal1
                  convert_b
         ofs0029:
                  iffalse ofs005c
                  jump ofs0060
         ofs0031:
                  label
                  returnvoid
                  pushtrue
                  iftrue ofs0038
         ofs0038:
                  label
                  findproperty QName(PackageNamespace(""),"?k")
                  pushstring "trilinear"
                  initproperty QName(PackageNamespace(""),"?k")
                  getlocal2
                  iftrue ofs004f
                  jump ofs0031
         ofs0048:
                  label
                  findproperty QName(PackageNamespace(""),"^Z")
                  pushstring "bilinear"
                  initproperty QName(PackageNamespace(""),"^Z")
         ofs004f:
                  getlocal1
                  dup
                  iftrue ofs0058
                  pop
                  getlocal0
                  convert_b
         ofs0058:
                  iffalse ofs0066
         ofs005c:
                  jump ofs0038
         ofs0060:
                  findproperty QName(PackageNamespace(""),"NONE")
                  pushstring "none"
                  initproperty QName(PackageNamespace(""),"NONE")
         ofs0066:
                  jump ofs0048
                  returnvoid
               end ; code
            end ; body
         end ; method
      }
      
      public function §&!A§()
      {
         method
            name null
            returns null
            
            body
               maxstack 3
               localcount 3
               initscopedepth 4
               maxscopedepth 5
               
               code
                  pushfalse
                  pushtrue
                  swap
                  jump ofs0010
                  multiply
                  convert_i
                  negate
                  swap
                  istypelate
                  getlocal1
                  swap
                  bitxor
                  subtract
         ofs0010:
                  setlocal1
                  setlocal2
                  getlocal0
                  pushscope
                  getlocal2
                  iffalse ofs001c
                  getlocal0
                  constructsuper 0
         ofs001c:
                  findpropstrict QName(PackageNamespace("+8"),"0K")
                  constructprop QName(PackageNamespace("+8"),"0K"), 0
                  throw
                  returnvoid
               end ; code
            end ; body
         end ; method
      }
      
      public static function §-!Z§(param1:String) : Boolean
      {
         trait method QName(PackageNamespace(""),"-!Z")
            flag FINAL
            dispid 3
            method
               name null
               param QName(PackageNamespace(""),"String")
               returns QName(PackageNamespace(""),"Boolean")
               
               body
                  maxstack 4
                  localcount 4
                  initscopedepth 3
                  maxscopedepth 4
                  
                  code
                     pushfalse
                     pushtrue
                     swap
                     jump ofs0014
                     convert_u
                     rshift
                     subtract_i
                     setlocal2
                     kill 2
                     kill 2
                     getlocal2
                     declocal_i 2
                     inclocal_i 2
            ofs0014:
                     setlocal2
                     setlocal3
                     getlocal0
                     pushscope
                     getlocal2
                     iftrue ofs00fa
                     jump ofs00fe
            ofs0021:
                     label
                     getlocal1
                     getlocal2
                     dup
                     iffalse ofs002c
                     pop
                     getlocal1
                     convert_b
            ofs002c:
                     iftrue ofs009f
                     findpropstrict QName(PackageNamespace(""),"?k")
                     getproperty QName(PackageNamespace(""),"?k")
                     getlocal2
                     iftrue ofs00a8
                     getlocal3
                     dup
                     iftrue ofs0042
                     pop
                     getlocal1
                     convert_b
            ofs0042:
                     iffalse ofs0103
                     equals
                     getlocal2
                     iftrue ofs005f
                     getlocal3
                     dup
                     iftrue ofs0055
                     pop
                     getlocal2
                     convert_b
            ofs0055:
                     iffalse ofs00ec
                     getlocal3
                     iffalse ofs00a9
                     convert_b
            ofs005f:
                     getlocal2
                     dup
                     iffalse ofs0068
                     pop
                     getlocal1
                     convert_b
            ofs0068:
                     iftrue ofs00aa
                     jump ofs007c
                     nextname
                     kill 2
                     convert_i
                     bitor
                     declocal_i 2
                     kill 2
                     multiply_i
                     coerce_s
                     pop
            ofs007c:
                     getlocal3
                     dup
                     iftrue ofs0085
                     pop
                     getlocal1
                     convert_b
            ofs0085:
                     iffalse ofs010b
                     getlocal3
                     dup
                     iftrue ofs0092
                     pop
                     getlocal2
                     convert_b
            ofs0092:
                     iffalse ofs0105
            ofs0096:
                     label
                     returnvalue
                     pushtrue
                     iftrue ofs009d
            ofs009d:
                     label
                     getlocal1
            ofs009f:
                     getlocal3
                     iffalse ofs00ff
                     findpropstrict QName(PackageNamespace(""),"^Z")
                     getproperty QName(PackageNamespace(""),"^Z")
            ofs00a8:
                     equals
            ofs00a9:
                     convert_b
            ofs00aa:
                     getlocal3
                     dup
                     iftrue ofs00b3
                     pop
                     getlocal0
                     convert_b
            ofs00b3:
                     iffalse ofs0104
            ofs00b7:
                     label
                     dup
                     getlocal2
                     dup
                     iffalse ofs00c2
                     pop
                     getlocal0
                     convert_b
            ofs00c2:
                     iftrue ofs00e3
                     getlocal3
                     jump ofs00d6
                     lessequals
                     dup
                     getlocal2
                     declocal_i 2
                     istypelate
                     swap
                     hasnext
                     urshift
                     declocal 2
            ofs00d6:
                     dup
                     iftrue ofs00de
                     pop
                     getlocal0
                     convert_b
            ofs00de:
                     iffalse ofs0107
                     convert_b
            ofs00e3:
                     getlocal3
                     iffalse ofs0106
                     iftrue ofs0096
            ofs00ec:
                     pop
                     getlocal2
                     dup
                     iffalse ofs00f6
                     pop
                     getlocal1
                     convert_b
            ofs00f6:
                     iftrue ofs010c
            ofs00fa:
                     jump ofs0021
            ofs00fe:
                     getlocal1
            ofs00ff:
                     findpropstrict QName(PackageNamespace(""),"NONE")
                     getproperty QName(PackageNamespace(""),"NONE")
            ofs0103:
                     equals
            ofs0104:
                     convert_b
            ofs0105:
                     dup
            ofs0106:
                     convert_b
            ofs0107:
                     iftrue ofs00b7
            ofs010b:
                     pop
            ofs010c:
                     jump ofs009d
                     returnvoid
                  end ; code
               end ; body
            end ; method
         }
      }
   }
