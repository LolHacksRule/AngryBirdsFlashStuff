package §>o§
{
   public class JSONParseError extends Error
   {
      
      {
         method
            name null
            returns null
            
            body
               maxstack 3
               localcount 1
               initscopedepth 4
               maxscopedepth 5
               
               code
                  getlocal0
                  pushscope
                  returnvoid
                  returnvoid
               end ; code
            end ; body
         end ; method
      }
      
      private var §+N§:int;
      
      private var §=r§:String;
      
      public function JSONParseError(param1:String = "", param2:int = 0, param3:String = "")
      {
         method
            name null
            flag HAS_OPTIONAL
            param QName(PackageNamespace(""),"String")
            param QName(PackageNamespace(""),"int")
            param QName(PackageNamespace(""),"String")
            optional Utf8("")
            optional Integer(0)
            optional Utf8("")
            returns null
            
            body
               maxstack 4
               localcount 6
               initscopedepth 5
               maxscopedepth 6
               
               code
                  pushfalse
                  pushtrue
                  setlocal 4
                  jump ofs0016
                  setlocal 4
                  setlocal 4
                  kill 4
                  convert_d
                  getlocal 4
                  multiply_i
                  pushfalse
                  not
                  setlocal 4
         ofs0016:
                  setlocal 5
                  getlocal0
                  pushscope
                  getlocal 5
                  dup
                  iffalse ofs0033
                  pop
                  getlocal1
                  convert_b
                  jump ofs0033
                  getlocal 4
                  getglobalscope
                  getlocal3
                  setlocal 4
                  getlocal3
                  astypelate
                  equals
                  pushundefined
                  astypelate
         ofs0033:
                  iftrue ofs008a
                  jump ofs0086
         ofs003b:
                  label
                  returnvoid
                  jump ofs0041
         ofs0041:
                  getlocal0
                  increment_i
                  negate_i
                  setlocal3
                  setlocal3
                  getlocal3
                  strictequals
                  multiply
                  getglobalscope
                  pushtrue
                  iftrue ofs004f
         ofs004f:
                  label
                  getlocal0
                  getlocal3
                  initproperty QName(PrivateNamespace("#!U"),"=r")
                  getlocal 4
                  dup
                  iftrue ofs005e
                  pop
                  getlocal2
                  convert_b
         ofs005e:
                  iffalse ofs0077
                  getlocal 4
                  iffalse ofs0082
                  getlocal 5
                  iftrue ofs008a
                  jump ofs003b
         ofs0072:
                  label
                  getlocal0
                  getlocal2
                  initproperty QName(PrivateNamespace("#!U"),"+N")
         ofs0077:
                  jump ofs004f
         ofs007b:
                  label
                  findproperty QName(PackageNamespace(""),"name")
                  pushstring "JSONParseError"
                  initproperty QName(PackageNamespace(""),"name")
         ofs0082:
                  jump ofs0072
         ofs0086:
                  getlocal0
                  getlocal1
                  constructsuper 1
         ofs008a:
                  jump ofs007b
                  returnvoid
               end ; code
            end ; body
         end ; method
      }
      
      public function get location() : int
      {
         trait getter QName(PackageNamespace(""),"location")
            dispid 0
            method
               name null
               returns QName(PackageNamespace(""),"int")
               
               body
                  maxstack 3
                  localcount 1
                  initscopedepth 5
                  maxscopedepth 6
                  
                  code
                     getlocal0
                     pushscope
                     getlocal0
                     jump ofs0010
                     getlocal2
                     istypelate
                     greaterthan
                     convert_i
                     pushscope
                     rshift
                     getlocal1
                     dup
                     lessthan
            ofs0010:
                     getproperty QName(PrivateNamespace("#!U"),"+N")
                     returnvalue
                     returnvoid
                  end ; code
               end ; body
            end ; method
         }
         
         public function get text() : String
         {
            trait getter QName(PackageNamespace(""),"text")
               dispid 0
               method
                  name null
                  returns QName(PackageNamespace(""),"String")
                  
                  body
                     maxstack 3
                     localcount 1
                     initscopedepth 5
                     maxscopedepth 6
                     
                     code
                        getlocal0
                        pushscope
                        getlocal0
                        jump ofs0010
                        coerce_s
                        increment_i
                        dxnslate
                        nextname
                        setlocal2
                        greaterequals
                        getlocal0
                        dup
                        istypelate
               ofs0010:
                        getproperty QName(PrivateNamespace("#!U"),"=r")
                        returnvalue
                        returnvoid
                     end ; code
                  end ; body
               end ; method
            }
         }
      }
