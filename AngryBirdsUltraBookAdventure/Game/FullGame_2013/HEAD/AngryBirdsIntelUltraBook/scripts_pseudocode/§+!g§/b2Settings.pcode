package §+!g§
{
   public class b2Settings
   {
      
      public static const VERSION:String = "2.1alpha";
      
      public static const §#!Q§:int = 65535;
      
      public static const b2_pi:Number = 3.141592653589793;
      
      public static const b2_maxManifoldPoints:int = 2;
      
      public static const b2_aabbExtension:Number = 0.1;
      
      public static const b2_aabbMultiplier:Number = 2.0;
      
      public static const b2_polygonRadius:Number;
      
      public static const b2_linearSlop:Number = 0.05;
      
      public static const b2_angularSlop:Number = 0.03490658503988659;
      
      public static const b2_toiSlop:Number = 0.4;
      
      public static const b2_maxTOIContactsPerIsland:int = 32;
      
      public static const b2_maxTOIJointsPerIsland:int = 32;
      
      public static const b2_velocityThreshold:Number = 1.0;
      
      public static const b2_maxLinearCorrection:Number = 0.2;
      
      public static const b2_maxAngularCorrection:Number = 0.13962634015954636;
      
      public static const b2_maxTranslation:Number = 2.0;
      
      public static const b2_maxTranslationSquared:Number = 4.0;
      
      public static const b2_maxRotation:Number = 1.5707963267948966;
      
      public static const b2_maxRotationSquared:Number = 2.4674011002723395;
      
      public static const b2_contactBaumgarte:Number = 0.2;
      
      public static const b2_timeToSleep:Number = 0.25;
      
      public static const b2_linearSleepTolerance:Number = 0.1;
      
      public static const b2_angularSleepTolerance:Number = 0.03490658503988659;
      
      {
         method
            name null
            returns null
            
            body
               maxstack 5
               localcount 3
               initscopedepth 3
               maxscopedepth 4
               
               code
                  pushfalse
                  pushtrue
                  swap
                  jump ofs0010
                  convert_o
                  swap
                  typeof
                  coerce_a
                  popscope
                  astypelate
                  greaterequals
                  dup
                  coerce_s
         ofs0010:
                  setlocal1
                  setlocal2
                  getlocal0
                  pushscope
                  getlocal1
                  dup
                  iffalse ofs001d
                  pop
                  getlocal2
                  convert_b
         ofs001d:
                  iftrue ofs0259
                  jump ofs0277
         ofs0025:
                  label
                  returnvoid
                  pushtrue
                  iftrue ofs002c
         ofs002c:
                  label
                  findproperty QName(PackageNamespace(""),"b2_angularSleepTolerance")
                  pushbyte 2
                  pushshort 180
                  divide
                  getlocal2
                  iffalse ofs003e
                  getlocal0
                  getproperty QName(PackageNamespace(""),"b2_pi")
                  multiply
         ofs003e:
                  initproperty QName(PackageNamespace(""),"b2_angularSleepTolerance")
                  getlocal1
                  iftrue ofs007c
                  getlocal1
                  dup
                  iffalse ofs004e
                  pop
                  getlocal0
                  convert_b
         ofs004e:
                  iftrue ofs0094
                  getlocal1
                  iftrue ofs00b6
                  getlocal2
                  dup
                  iftrue ofs0060
                  pop
                  getlocal2
                  convert_b
         ofs0060:
                  iffalse ofs011e
                  getlocal1
                  dup
                  iffalse ofs006d
                  pop
                  getlocal1
                  convert_b
         ofs006d:
                  iftrue ofs015a
                  jump ofs0025
         ofs0075:
                  label
                  findproperty QName(PackageNamespace(""),"b2_linearSleepTolerance")
                  pushdouble 0.1
                  initproperty QName(PackageNamespace(""),"b2_linearSleepTolerance")
         ofs007c:
                  getlocal2
                  dup
                  iftrue ofs0085
                  pop
                  getlocal2
                  convert_b
         ofs0085:
                  iffalse ofs0196
                  jump ofs002c
         ofs008d:
                  label
                  findproperty QName(PackageNamespace(""),"b2_timeToSleep")
                  pushdouble 0.25
                  initproperty QName(PackageNamespace(""),"b2_timeToSleep")
         ofs0094:
                  getlocal2
                  iffalse ofs018b
                  getlocal1
                  dup
                  iffalse ofs00a2
                  pop
                  getlocal1
                  convert_b
         ofs00a2:
                  iftrue ofs01b1
                  getlocal1
                  iftrue ofs0209
                  jump ofs0075
         ofs00af:
                  label
                  findproperty QName(PackageNamespace(""),"b2_contactBaumgarte")
                  pushdouble 0.2
                  initproperty QName(PackageNamespace(""),"b2_contactBaumgarte")
         ofs00b6:
                  getlocal1
                  dup
                  iffalse ofs00bf
                  pop
                  getlocal1
                  convert_b
         ofs00bf:
                  iftrue ofs00ef
                  getlocal1
                  dup
                  iffalse ofs00cc
                  pop
                  getlocal1
                  convert_b
         ofs00cc:
                  iftrue ofs01a1
                  jump ofs008d
         ofs00d4:
                  label
                  findproperty QName(PackageNamespace(""),"b2_maxRotationSquared")
                  findpropstrict QName(PackageNamespace(""),"b2_maxRotation")
                  getproperty QName(PackageNamespace(""),"b2_maxRotation")
                  getlocal2
                  dup
                  iftrue ofs00e4
                  pop
                  getlocal1
                  convert_b
         ofs00e4:
                  iffalse ofs00ed
                  findpropstrict QName(PackageNamespace(""),"b2_maxRotation")
                  getproperty QName(PackageNamespace(""),"b2_maxRotation")
                  multiply
         ofs00ed:
                  initproperty QName(PackageNamespace(""),"b2_maxRotationSquared")
         ofs00ef:
                  getlocal2
                  iffalse ofs0142
                  jump ofs00af
         ofs00f8:
                  label
                  findproperty QName(PackageNamespace(""),"b2_maxRotation")
                  pushdouble 0.5
                  getlocal1
                  dup
                  iffalse ofs0106
                  pop
                  getlocal2
                  convert_b
         ofs0106:
                  iftrue ofs010f
                  findpropstrict QName(PackageNamespace(""),"b2_pi")
                  getproperty QName(PackageNamespace(""),"b2_pi")
                  multiply
         ofs010f:
                  initproperty QName(PackageNamespace(""),"b2_maxRotation")
                  jump ofs011e
                  checkfilter
                  convert_d
                  pushscope
                  hasnext
                  hasnext
                  setlocal2
                  pushundefined
                  getlocal0
                  pushfalse
         ofs011e:
                  getlocal2
                  iffalse ofs01cb
                  jump ofs00d4
         ofs0127:
                  label
                  findproperty QName(PackageNamespace(""),"b2_maxTranslationSquared")
                  findpropstrict QName(PackageNamespace(""),"b2_maxTranslation")
                  getproperty QName(PackageNamespace(""),"b2_maxTranslation")
                  getlocal2
                  dup
                  iftrue ofs0137
                  pop
                  getlocal1
                  convert_b
         ofs0137:
                  iffalse ofs0140
                  findpropstrict QName(PackageNamespace(""),"b2_maxTranslation")
                  getproperty QName(PackageNamespace(""),"b2_maxTranslation")
                  multiply
         ofs0140:
                  initproperty QName(PackageNamespace(""),"b2_maxTranslationSquared")
         ofs0142:
                  getlocal1
                  dup
                  iffalse ofs014b
                  pop
                  getlocal2
                  convert_b
         ofs014b:
                  iftrue ofs021e
                  jump ofs00f8
         ofs0153:
                  label
                  findproperty QName(PackageNamespace(""),"b2_maxTranslation")
                  pushbyte 2
                  initproperty QName(PackageNamespace(""),"b2_maxTranslation")
         ofs015a:
                  getlocal1
                  iftrue ofs0180
                  jump ofs0127
         ofs0163:
                  label
                  findproperty QName(PackageNamespace(""),"b2_maxAngularCorrection")
                  pushbyte 8
                  pushshort 180
                  divide
                  getlocal2
                  dup
                  iftrue ofs0175
                  pop
                  getlocal1
                  convert_b
         ofs0175:
                  iffalse ofs017e
                  findpropstrict QName(PackageNamespace(""),"b2_pi")
                  getproperty QName(PackageNamespace(""),"b2_pi")
                  multiply
         ofs017e:
                  initproperty QName(PackageNamespace(""),"b2_maxAngularCorrection")
         ofs0180:
                  jump ofs0153
         ofs0184:
                  label
                  findproperty QName(PackageNamespace(""),"b2_maxLinearCorrection")
                  pushdouble 0.2
                  initproperty QName(PackageNamespace(""),"b2_maxLinearCorrection")
         ofs018b:
                  jump ofs0163
         ofs018f:
                  label
                  findproperty QName(PackageNamespace(""),"b2_velocityThreshold")
                  pushbyte 1
                  initproperty QName(PackageNamespace(""),"b2_velocityThreshold")
         ofs0196:
                  jump ofs0184
         ofs019a:
                  label
                  findproperty QName(PackageNamespace(""),"b2_maxTOIJointsPerIsland")
                  pushbyte 32
                  initproperty QName(PackageNamespace(""),"b2_maxTOIJointsPerIsland")
         ofs01a1:
                  getlocal2
                  iffalse ofs01f9
                  jump ofs018f
         ofs01aa:
                  label
                  findproperty QName(PackageNamespace(""),"b2_maxTOIContactsPerIsland")
                  pushbyte 32
                  initproperty QName(PackageNamespace(""),"b2_maxTOIContactsPerIsland")
         ofs01b1:
                  getlocal1
                  iftrue ofs0259
                  getlocal2
                  iffalse ofs027d
                  jump ofs019a
         ofs01bf:
                  label
                  findproperty QName(PackageNamespace(""),"b2_toiSlop")
                  pushbyte 8
                  findpropstrict QName(PackageNamespace(""),"b2_linearSlop")
                  getproperty QName(PackageNamespace(""),"b2_linearSlop")
                  multiply
                  initproperty QName(PackageNamespace(""),"b2_toiSlop")
         ofs01cb:
                  getlocal2
                  dup
                  iftrue ofs01d4
                  pop
                  getlocal2
                  convert_b
         ofs01d4:
                  iffalse ofs0273
                  jump ofs01aa
         ofs01dc:
                  label
                  findproperty QName(PackageNamespace(""),"b2_angularSlop")
                  pushbyte 2
                  pushshort 180
                  divide
                  getlocal2
                  dup
                  iftrue ofs01ee
                  pop
                  getlocal0
                  convert_b
         ofs01ee:
                  iffalse ofs01f7
                  findpropstrict QName(PackageNamespace(""),"b2_pi")
                  getproperty QName(PackageNamespace(""),"b2_pi")
                  multiply
         ofs01f7:
                  initproperty QName(PackageNamespace(""),"b2_angularSlop")
         ofs01f9:
                  getlocal2
                  iffalse ofs024e
                  jump ofs01bf
         ofs0202:
                  label
                  findproperty QName(PackageNamespace(""),"b2_linearSlop")
                  pushdouble 0.05
                  initproperty QName(PackageNamespace(""),"b2_linearSlop")
         ofs0209:
                  getlocal1
                  iftrue ofs0268
                  jump ofs01dc
         ofs0212:
                  label
                  findproperty QName(PackageNamespace(""),"b2_polygonRadius")
                  pushbyte 2
                  findpropstrict QName(PackageNamespace(""),"b2_linearSlop")
                  getproperty QName(PackageNamespace(""),"b2_linearSlop")
                  multiply
                  initproperty QName(PackageNamespace(""),"b2_polygonRadius")
         ofs021e:
                  getlocal2
                  dup
                  iftrue ofs0234
                  pop
                  getlocal0
                  jump ofs0233
                  subtract_i
                  getlocal3
                  lessthan
                  negate
                  greaterthan
                  modulo
                  astypelate
                  convert_o
                  increment_i
         ofs0233:
                  convert_b
         ofs0234:
                  iffalse ofs0243
                  jump ofs0202
         ofs023c:
                  label
                  findproperty QName(PackageNamespace(""),"b2_aabbMultiplier")
                  pushbyte 2
                  initproperty QName(PackageNamespace(""),"b2_aabbMultiplier")
         ofs0243:
                  jump ofs0212
         ofs0247:
                  label
                  findproperty QName(PackageNamespace(""),"b2_aabbExtension")
                  pushdouble 0.1
                  initproperty QName(PackageNamespace(""),"b2_aabbExtension")
         ofs024e:
                  jump ofs023c
         ofs0252:
                  label
                  findproperty QName(PackageNamespace(""),"b2_maxManifoldPoints")
                  pushbyte 2
                  initproperty QName(PackageNamespace(""),"b2_maxManifoldPoints")
         ofs0259:
                  jump ofs0247
         ofs025d:
                  label
                  findproperty QName(PackageNamespace(""),"b2_pi")
                  findpropstrict QName(PackageNamespace(""),"Math")
                  getproperty QName(PackageNamespace(""),"Math")
                  getproperty QName(PackageNamespace(""),"PI")
                  initproperty QName(PackageNamespace(""),"b2_pi")
         ofs0268:
                  jump ofs0252
         ofs026c:
                  label
                  findproperty QName(PackageNamespace(""),"#!Q")
                  pushint 65535
                  initproperty QName(PackageNamespace(""),"#!Q")
         ofs0273:
                  jump ofs025d
         ofs0277:
                  findproperty QName(PackageNamespace(""),"VERSION")
                  pushstring "2.1alpha"
                  initproperty QName(PackageNamespace(""),"VERSION")
         ofs027d:
                  jump ofs026c
                  returnvoid
               end ; code
            end ; body
         end ; method
      }
      
      public function b2Settings()
      {
         method
            name null
            returns null
            
            body
               maxstack 3
               localcount 3
               initscopedepth 4
               maxscopedepth 5
               
               code
                  pushfalse
                  pushtrue
                  setlocal1
                  jump ofs0010
                  checkfilter
                  modulo
                  astypelate
                  convert_u
                  subtract_i
                  coerce_a
                  modulo
                  checkfilter
                  lessthan
         ofs0010:
                  setlocal2
                  getlocal0
                  pushscope
                  getlocal2
                  iftrue ofs001b
                  getlocal0
                  constructsuper 0
         ofs001b:
                  returnvoid
                  returnvoid
               end ; code
            end ; body
         end ; method
      }
      
      public static function b2MixFriction(param1:Number, param2:Number) : Number
      {
         trait method QName(PackageNamespace(""),"b2MixFriction")
            flag FINAL
            dispid 3
            method
               name null
               param QName(PackageNamespace(""),"Number")
               param QName(PackageNamespace(""),"Number")
               returns QName(PackageNamespace(""),"Number")
               
               body
                  maxstack 5
                  localcount 3
                  initscopedepth 3
                  maxscopedepth 4
                  
                  code
                     getlocal0
                     pushscope
                     findpropstrict QName(PackageNamespace(""),"Math")
                     jump ofs0011
                     nextvalue
                     strictequals
                     getlocal2
                     setlocal3
                     hasnext
                     decrement_i
                     getlocal1
                     strictequals
                     bitnot
            ofs0011:
                     getproperty QName(PackageNamespace(""),"Math")
                     getlocal1
                     getlocal2
                     multiply
                     callproperty QName(PackageNamespace(""),"sqrt"), 1
                     returnvalue
                     returnvoid
                  end ; code
               end ; body
            end ; method
         }
         
         public static function b2MixRestitution(param1:Number, param2:Number) : Number
         {
            trait method QName(PackageNamespace(""),"b2MixRestitution")
               flag FINAL
               dispid 4
               method
                  name null
                  param QName(PackageNamespace(""),"Number")
                  param QName(PackageNamespace(""),"Number")
                  returns QName(PackageNamespace(""),"Number")
                  
                  body
                     maxstack 4
                     localcount 5
                     initscopedepth 3
                     maxscopedepth 4
                     
                     code
                        pushfalse
                        pushtrue
                        swap
                        jump ofs0014
                        inclocal_i 3
                        setlocal2
                        inclocal_i 2
                        getlocal3
                        inclocal_i 2
                        equals
                        dup
                        declocal 3
                        lessequals
               ofs0014:
                        setlocal3
                        setlocal 4
                        getlocal0
                        pushscope
                        getlocal3
                        dup
                        iffalse ofs0022
                        pop
                        getlocal0
                        convert_b
               ofs0022:
                        iftrue ofs005c
                        jump ofs0037
                        coerce_a
                        declocal_i 2
                        declocal 3
                        declocal_i 2
                        kill 3
                        typeof
                        subtract_i
                        setlocal3
                        pushnull
               ofs0037:
                        getlocal1
                        getlocal3
                        dup
                        iffalse ofs0052
                        jump ofs004f
                        kill 3
                        convert_i
                        setlocal2
                        istypelate
                        dxnslate
                        kill 3
                        inclocal_i 3
                        declocal_i 2
                        increment_i
               ofs004f:
                        pop
                        getlocal2
                        convert_b
               ofs0052:
                        iftrue ofs0086
                        getlocal2
                        greaterthan
                        iffalse ofs0076
               ofs005c:
                        getlocal1
                        getlocal 4
                        dup
                        iftrue ofs0067
                        pop
                        getlocal2
                        convert_b
               ofs0067:
                        iffalse ofs0085
                        convert_d
                        getlocal 4
                        iffalse ofs0086
                        jump ofs0086
               ofs0076:
                        getlocal2
                        getlocal 4
                        dup
                        iftrue ofs0081
                        pop
                        getlocal0
                        convert_b
               ofs0081:
                        iffalse ofs0086
               ofs0085:
                        convert_d
               ofs0086:
                        returnvalue
                        returnvoid
                     end ; code
                  end ; body
               end ; method
            }
            
            public static function b2Assert(param1:Boolean) : void
            {
               trait method QName(PackageNamespace(""),"b2Assert")
                  flag FINAL
                  dispid 5
                  method
                     name null
                     param QName(PackageNamespace(""),"Boolean")
                     returns QName(PackageNamespace(""),"void")
                     
                     body
                        maxstack 3
                        localcount 4
                        initscopedepth 3
                        maxscopedepth 4
                        
                        code
                           pushfalse
                           pushtrue
                           swap
                           jump ofs0015
                           declocal 2
                           kill 2
                           setlocal2
                           getlocal2
                           nextname
                           lessequals
                           declocal 2
                           inclocal 2
                           inclocal_i 2
                  ofs0015:
                           setlocal2
                           setlocal3
                           getlocal0
                           pushscope
                           getlocal3
                           iffalse ofs0039
                           getlocal1
                           getlocal2
                           dup
                           iffalse ofs0028
                           pop
                           getlocal2
                           convert_b
                  ofs0028:
                           iftrue ofs002d
                           not
                  ofs002d:
                           iffalse ofs0039
                           getlocal2
                           iftrue ofs0039
                           pushstring "Assertion Failed"
                           throw
                  ofs0039:
                           returnvoid
                           returnvoid
                        end ; code
                     end ; body
                  end ; method
               }
            }
         }
